#include "dummy_memory.nh"
#include "hex.nh"

module dummy_memory
{
    mem memory[0x1050][8];

    reg value[8];
    proc_name read_proc();
    proc_name write_proc(value);

    reg access_base[32];

    //func_in init();
    func init seq
    {
        _readmemh(MEMORY_HEX, memory);
    }

    //func_in request_read(address);
    func request_read
    {
        read_proc();
        if(address < 0x80000000)
        {
            error(ERROR_DUMMY_MEM_ADDRESS);
        }
        access_base := address - 0x80000000;
    }
    proc read_proc
    {
        read_done({
                memory[access_base[12:0]+ 3], memory[access_base[12:0]+ 2],
                memory[access_base[12:0]+ 1], memory[access_base[12:0]+ 0]});
        finish();
    }

    //func_in request_write(address, write_data);
    func request_write
    {
        write_proc(write_data);
        if(address < 0x80000000)
        {
            error(ERROR_DUMMY_MEM_ADDRESS);
        }
        access_base := address - 0x80000000;

        // for riscv-test
        if(address == 0x80001000)
        {
            if(write_data == 1)
            {
                error(ERROR_OK);
            }
            else
            {
                error(write_data[ERROR_NUM_BIT_WIDTH - 1:0]);
            }
        }
    }

    proc write_proc seq
    {
        memory[access_base[12:0]] := value[7:0];
        {
            write_done();
            finish();
        }
    }
}
