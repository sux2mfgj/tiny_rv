#include "dummy_arbiter.nh"
#include "dummy_memory.nh"

module dummy_arbiter
{
    dummy_memory memory;

    reg write_address[32];
    reg write_size[3];
    reg write_data[32];
    reg write_i[3];
    proc_name store_proc(write_address, write_data, write_size);
    reg is_wait;

    func init
    {
        memory.init();
    }

    //func_in request_inst(i_address);
    func request_inst
    {
        memory.request_read(i_address);
    }

    //func_out memry.read_done(read_data);
    func memory.read_done
    {
        inst_done(memory.read_data);
    }

    /*
    func memory.write_done
    {
        store_done();
    }
    */

    //func_in load(d_address);
    func load
    {
        error(ERROR_DUMMY_ARBITER);
        load_done(0);
    }

    //func_in store(d_address, d_in_data);
    func store_w
    {
        store_proc(d_address, d_in_data, 4);
        write_i := 0;
        is_wait := 1'b0;
    }

    //proc_name store_proc(write_address, write_data, write_size);
    proc store_proc
    {
        if(is_wait)
        {
            if(memory.write_done)
            {
                if(write_size == 1)
                {
                    store_done();
                    finish();
                }
                else
                {
                    store_proc(write_address + 1, write_data >> 8, write_size - 1);
                    is_wait := 1'b0;
                }
            }
        }
        else
        {
            memory.request_write(write_address, write_data[7:0]);
            is_wait := 1'b1;
        }
    }
}
