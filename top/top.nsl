#include "top.nh"

#include "../core/tiny_rv.nh"

module top
{
    tiny_rv core;
    bus_arbiter_with_rom arbiter;

    //core.p_reset = p_reset;
    //core.m_clock = m_clock;
    /*
     * core functions
     */
    func core.inst_request
    {
        arbiter.i_request(core.i_address);
    }

    func core.load_b
    {
        error(ERROR_NOT_IMPLEMENTED);
    }

    func core.load_h
    {
        error(ERROR_NOT_IMPLEMENTED);
    }

    func core.load_w
    {
        error(ERROR_NOT_IMPLEMENTED);
    }

    func core.store_b
    {
        arbiter.store_b(core.d_address, core.store_data);
    }

    func core.store_h
    {
        error(ERROR_NOT_IMPLEMENTED);
    }

    func core.store_w
    {
        error(ERROR_NOT_IMPLEMENTED);
    }

    /*
     * error functions
     */
    func arbiter.i_done
    {
        core.inst_done(arbiter.i_data);
    }

    func arbiter.store_done
    {
        core.store_done();
    }

    /*
     * functions for error
     */
    func core.error
    {
        error(core.error_num);
    }

    /*
     * connections for axi master
     */
    awvalid = arbiter.awvalid;
    arbiter.awready = awready;
    awaddr = arbiter.awaddr;
    awprot = arbiter.awprot;
    wvalid = arbiter.wvalid;
    arbiter.wready = wready;
    wdata = arbiter.wdata;
    wstrb = arbiter.wstrb;
    arbiter.bvalid = bvalid;
    bready = arbiter.bready;
    arbiter.bresp = bresp;
    arvalid = arbiter.arvalid;
    arbiter.arready = arready;
    araddr = arbiter.araddr;
    arprot = arbiter.arprot;
    arbiter.rvalid = rvalid;
    rready = arbiter.rready;
    arbiter.rdata = rdata;
    arbiter.rresp = rresp;
}
