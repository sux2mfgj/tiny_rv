#include "inst_fetch.nh"

declare inst_fetch_tb simulation {}

module inst_fetch_tb
{

    reg counter[10] = 0;

    instruction_fetch ifetch;
    reg pc[32] = 0x00001000;

    reg address[32] = 0;
    proc_name read_mem(address);

    // for simulation
    counter++;
    if(counter == 10'0x8)
    {
        ifetch.run();
    }
    if(counter == 10'0x20)
    {
        _finish();
    }

    // top module side
    func ifetch.get_pc
    {
        return pc;
        pc := pc + 32'0x4;
    }

    func ifetch.execute
    {
        _display("execute is called");
    }

    // memory side
    func ifetch.inst_request
    {
        read_mem(ifetch.address);
    }

    proc read_mem
    {
        if(counter[2])
        {
            ifetch.inst_enable(32'h00000793); // li a5, 0
            finish();
        }
    }
}
